body  {
    min-height: 100vh;
    background: linear-gradient(to bottom, #abc 0%,#fff 100%);
    font-family: arial;
    padding: 0;
    margin: 0;
}
button {
    border-image: none;
    background-color: #fff;
}
@supports (display: grid) {
    .gameboard {
        height: 75vh;
        display: grid;
        grid-template-columns: 100%;
        grid-template-rows: 25px auto 50px;
        grid-row-gap: 1rem;
    }
    .cell-wrapper {
        display: grid;
        grid-template-columns: 33.33% 33.33% 33.33%;
        grid-template-rows: 33.33% 33.33% 33.33%;
    }
}

@supports not (display: grid) {
    .gameboard {
        height: 75vh;
        display: flex;
        flex-direction: column;
    }
    .message {
        flex: 0 0 25px;
    }
    .cell-wrapper {
        flex: 1 0 auto;
        display: flex;
        flex-wrap: wrap;
        margin-bottom: 1rem;
    }
    .reset {
        flex: 0 0 25px;
    }
    .cell {
        flex: 1 0 33.33%;
        height: 33.33%;
    }
}

/* 
    might seem odd using vh with widths or vw with height, 
    but this is to try and keep the view somewhat square.
    Therefor one wants the width to adjust in relation to
    the height of the viewport
*/
header {
    max-width: 75vh;
    margin: 0 auto;
}
.message:not(:empty) {
    background-color: #d8a0a0;
    border: 1px solid #cc2f2f;
    line-height: 25px;
    padding: 0 10px;
}
.gameboard {
    max-width: 75vh;
    margin: 0 auto;
    max-height: 125vw;
    
}
.cell-wrapper .cell {
    font-size: 15vw;
    background-color: #333;
    color: #fff;
    transition: all .5s;
}
.cell-wrapper .cell:hover,
.cell-wrapper .cell:focus {
    background-color: #666;
}
.reset {
    font-size: 1.5rem;
}